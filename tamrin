'''students_count = 1000 #int
rating = 4.99 #float
is_published = False #bool
course_name = "erfan \nprogramming" #str
print(course_name)
print(len(course_name))'''

'''first = 'erfan'
last = 'nasiri'
full = f'{first} {last}'
print(full.upper())
print(full.lower())
print(full.title())
print(full.strip())
print(full.find('n'))
print(full.replace('n', 'e'))
print('er' in first)
print('er' not in first)'''

'''print(10 + 3)
print(10 - 3)
print(10 * 3)
print(10 / 3)
print(10 // 3)
print(10 % 3)
print(10 ** 3)

x = 10
x += 3
print(x)'''

'''import math
print(round(2.9))
print(abs(-2.9))

print(math.ceil(2.2))
print()'''

'''x = input('x: ')
y = int(x) + 1
print(f'x: {x}, y: {y}')'''

'''temperature = 29
if temperature > 30:
    print('its warm')
elif temperature > 20:
    print("it's nice")
else:
    print('its cold')
print("done")'''

'''age = 12
message = "eligible" if age >= 18 else "not eligible"
print(message)'''

'''and
or
not'''

'''high_income = False
good_credit = True
student = False
if (high_income or good_credit) and not student:
    print("eligible")
else:
    print('not eligible')'''

'''# age should be between 18 and 65
age = 22
#if age >= 18 and age <65:
if 18 <= age < 65:
    print("eligible")'''

'''for x in range(1, 10, 2):
    print("attempt",x ,x * '.')'''

'''successful = True
for number in range(3):
    print("attempt")
    if successful:
        print("successful")
        break
else:
    print("attempted 3 times and failed")'''

'''for x in range(5):
    for y in range(3):
        print(f"({x}, {y})")'''

'''for x in [1, 2, 3, 4]:
    print(x)'''

'''number = 100
while number > 0:
    print(number)
    number //= 2'''

'''command = ''
while command.lower() != "quit":
    command = input(">")
    print("ECHO", command)'''

'''while True:
    command = input(">")
    print("ECHO", command)
    if command.lower() == 'quit':
        break'''

'''count = 0
for x in range(1, 10):
    if x % 2 == 1:
        count += 1
        print(x)
print(f'we have {count} even numbers')'''

'''def greet():
    print('hi there')
    print('welcome aboard')


greet()'''

'''def greet(firstname, last_name):
    print(f"hi {firstname} {last_name}")
    print("welcome aboard")

greet("fayaz", "azizi")'''

'''def greet(name):
    return f"hi {name}"

message = greet("mosh")'''

'''def increment(number, by):
    return number + by

print(increment(number=2, by=1))'''

'''def multiply(*numbers):
    total = 1
    for number in numbers:
        total *= number
    return total

print(multiply(2, 3, 4, 5))'''

'''def save_user(**user):
    print(user)

save_user(id=1, name="john", age=22)'''

'''def multiply(*numbers):
    total = 1
    for number in numbers:
        return total
    
print("start")
print(multiply(1, 2, 3))'''


'''def fizz_buzz(x):
    if (x % 3 == 0) and (x % 7 == 0):
        return "fizz_buzz"
    if x % 3 == 0:
        return "fizz"
    if x % 7 == 0:
        return "buzz"
    

print(fizz_buzz(7))'''

'''letters = ["a", "b", "c"]
matrix = [[1, 2], [2, 3]]
zeros = [0] * 5
combined = zeros + letters
numbers = list(range(20))
chars = list("hello world")
print(len(chars))
print(numbers)
print(chars)'''


'''letters = ["a", "b", "c", "d"]
letters[0] = "A"
print(letters[0:-1])

numbers = list(range(50))
print(numbers[::-5])'''


'''numbers = [1, 2, 3, 5, 6, 7]
x, *y, z = numbers
print(x)
print(y)
print(z)'''


'''letters = ["a", "b", "c"]
for x, y, in enumerate(letters):
    print(x, y)'''

'''letters = ["a", "b", "c"]

#add
letters.append(0) #last
letters.insert(1, 2) #costume position add

#remove
letters.pop(0)
letters.remove("b") #first b in list
del letters[0:2]
letters.clear()
print(letters)'''


'''letters = ["a", "b", "c", "d"]
print(letters.count("d"))
if "d" in letters:
    print(letters.index("d"))'''
 
'''numbers = [3, 51, 2, 8, 6]
#numbers.sort()
print(sorted(numbers, reverse=True))
print(numbers)'''

'''items = [
    ("product1", 10),
    ("product2", 9),
    ("product3", 13),
]

def sort_item(item):
    return item[1]
#for uppgrading we use lambda as a key  (232,234)
#then use parameter and expression like item adn item[1] (237)

items.sort(key=lambda item:item[1])
print(items)'''

'''items = [
    ("product1", 10),
    ("product2", 9),
    ("product3", 12),
]

prices = []
for item in items:
    prices.append(item[1])
#two way for right this code
prices = list(map(lambda item: item[1], items))
print(prices)'''

#best way to understand it is down there

'''items = [
    ("product1", 10),
    ("product2", 9),
    ("product3", 12),
]

x = list(filter(lambda item: item[1] >= 10, items))
print(x)'''
#we use lambda for (for x in y) 
#use [] for show our target in filter
#then select our list after (,) 

#THE BEST PAAAART

'''items = [
    ("product1", 10),
    ("product2", 9),
    ("product3", 12),
]

#for map we use (JUST IN PYTHON)

prices = list(map(lambda item: item[1], items))
prices = [item[1] for item in items]

#for filter we use (JUST IN PYTHON)

filtered = list(filter(lambda x: item[1] >= 10, items))
filtered = [item for item in items if item[1] >= 10]'''


'''list1 = [1, 2, 3]
list2 = [10, 20, 30]
#ONLY IN PYTHON
print(list(zip("abc", list1, list2)))'''

#LIFO(last in first out)

'''browsing_session = []
browsing_session.append(1)
browsing_session.append(2)
browsing_session.append(3)
print(browsing_session)
last = browsing_session.pop()
print(last)
print(browsing_session)
print("redirect",browsing_session[-1])
if not browsing_session:
    print("disable")'''

#FIFO(first in first out)(queue)

'''from collections import deque
queue = deque([])
queue.append(1)
queue.append(2)
queue.append(3)
queue.popleft()
print(queue)
if not queue:
    print("empty")'''

#change variable
'''x = 10
y = 11

z = x
x = y
y = z


#but we can use this in python

x, y = y, x

#dar asl in etefaq oftade 

x, y = (11, 10)

print("x", x)
print("y", y)'''



'''from array import array

numbers = array("i", [1, 2, 3])
numbers[0]'''


'''numbers = [1, 1, 2, 3, 4]
first= set(numbers)
second = {0, 4}
print(first | second) #hame
print(first & second) #moshtarak
print(first - second) #bejoz
print(first ^ second) #hame bejoz moshtarak

if 1 in first:
    print('yes')
#you cant use with index'''


point = {"x": 1, "y": 2}
point = dict(x=1, y=2)
point["x"]
